# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app radarr
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    ingress:
      app:
        annotations:
          nginx.ingress.kubernetes.io/auth-method: "GET"
          nginx.ingress.kubernetes.io/auth-url: "http://authelia.auth.svc.cluster.local:9091/api/authz/auth-request"
          nginx.ingress.kubernetes.io/auth-signin: "https://auth-k8s.${SECRET_DOMAIN_INT}?rm=$request_method"
          nginx.ingress.kubernetes.io/auth-response-headers: "Remote-User,Remote-Name,Remote-Groups,Remote-Email"
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Arrr
          gethomepage.dev/description: Movie Manager
          gethomepage.dev/widget.type: radarr
          gethomepage.dev/name: radarr
          gethomepage.dev/widget.key: '{{ "{{" }}HOMEPAGE_VAR_RADARR_API_KEY{{ "}}" }}'
          gethomepage.dev/widget.headers.host: radarr.${SECRET_DOMAIN_INT}
          gethomepage.dev/widget.url: http://radarr.default.svc.cluster.local:80
          gethomepage.dev/icon: radarr
        enabled: true
        className: internal
        hosts:
          - host: &host "radarr.${SECRET_DOMAIN_INT}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
      api:
        annotations:
          external-dns.alpha.kubernetes.io/controller: "disabled"
        enabled: true
        className: internal
        hosts:
          - host: &host "radarr.${SECRET_DOMAIN_INT}"
            paths:
              - path: /api
                service:
                  identifier: app
                  port: http
    controllers:
      radarr:
        replicas: 1
        strategy: Recreate
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/radarr
              tag: 5.25.0.10024@sha256:f4e472beddcb6197fa9d08c41681dedbf21bee38db7f97057ba1d44dc9440a0c
            env:
              TZ: ${CLUSTER_TZ}
              RADARR__SERVER__PORT: &containerPort 80
              RADARR__APP__INSTANCENAME: radarr-K8s
              RADARR__APP__THEME: dark
              RADARR__AUTH__METHOD: External
              RADARR__AUTH__REQUIRED: DisabledForLocalAddresses
              RADARR__LOG__DBENABLED: "False"
              RADARR__LOG__LEVEL: info
              RADARR__UPDATE__BRANCH: develop
            envFrom:
              - secretRef:
                  name: radarr-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *containerPort
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 50m
                memory: 256Mi
              limits:
                memory: 1Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        controller: *app
        ports:
          http:
            port: *containerPort
    persistence:
      config:
        enabled: true
        type: persistentVolumeClaim
        storageClass: longhorn-standard
        accessMode: ReadWriteOnce
        size: 1Gi
      tmp:
        type: emptyDir
      public:
        enabled: true
        existingClaim: smb-public-pvc
        type: persistentVolumeClaim
