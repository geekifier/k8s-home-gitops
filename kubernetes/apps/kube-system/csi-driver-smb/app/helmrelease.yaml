# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: csi-driver-smb
  namespace: kube-system
spec:
  interval: 30m
  chart:
    spec:
      chart: csi-driver-smb
      version: v1.17.0
      sourceRef:
        kind: HelmRepository
        name: csi-driver-smb
        namespace: flux-system
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    feature:
      enableGetVolumeStats: true
    controller:
      name: csi-smb-controller
      replicas: 1
      dnsPolicy: ClusterFirstWithHostNet # available values: Default, ClusterFirstWithHostNet, ClusterFirst
      metricsPort: 29644
      livenessProbe:
        healthPort: 29642
      runOnMaster: false
      runOnControlPlane: false
      logLevel: 5
      workingMountDir: "/tmp"

    node:
      maxUnavailable: 1
      logLevel: 5
      livenessProbe:
        healthPort: 29643

    linux:
      enabled: true
      kubelet: /var/lib/kubelet

    windows:
      enabled: false # Unless you already had csi proxy installed, windows.csiproxy.enabled=true is required
      dsName: csi-smb-node-win # daemonset name
      kubelet: 'C:\var\lib\kubelet'
      removeSMBMappingDuringUnmount: true
      tolerations:
        - key: "node.kubernetes.io/os"
          operator: "Exists"
          effect: "NoSchedule"
      resources:
        livenessProbe:
          limits:
            memory: 150Mi
          requests:
            cpu: 10m
            memory: 40Mi
        nodeDriverRegistrar:
          limits:
            memory: 150Mi
          requests:
            cpu: 10m
            memory: 40Mi
        smb:
          limits:
            memory: 200Mi
          requests:
            cpu: 10m
            memory: 40Mi
      csiproxy:
        enabled: false # required if windows.enabled is true, but may be installed manually also
        dsName: csi-proxy-win # daemonset name
        tolerations: {}
        affinity: {}
        nodeSelector:
          "kubernetes.io/os": windows

    customLabels: {}
    ## Collection of annotations to add to all the pods
    podAnnotations: {}
    ## Collection of labels to add to all the pods
    podLabels: {}
    ## Leverage a PriorityClass to ensure your pods survive resource shortages
    ## ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
    priorityClassName: system-cluster-critical
    ## Security context give the opportunity to run container as nonroot by setting a securityContext
    ## by example :
    ## securityContext: { runAsUser: 1001 }
    securityContext: { seccompProfile: { type: RuntimeDefault } }
